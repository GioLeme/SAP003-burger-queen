{"ast":null,"code":"import _objectSpread from \"/home/giovannasouto/Desktop/lab/burguer-queen/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nvar _jsxFileName = \"/home/giovannasouto/Desktop/lab/burguer-queen/src/components/cooker/cooker.js\";\nimport React, { Component } from 'react';\nimport fire from 'firebase';\nimport Button from '@material-ui/core/Button';\n\nclass CookerComponent extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      requestList: []\n    };\n\n    this.getRequestFirebase = () => {\n      return fire.firestore().collection('requests').get().then(request => {\n        const requestList = [];\n        request.forEach(doc => requestList.push(_objectSpread({}, doc.data(), {\n          id: doc.uid\n        })));\n        this.setState({\n          requestList\n        });\n      }).catch(err => err);\n    };\n\n    this.createRestaurantManager = () => {\n      return this.state.requestList.map(actualRequest => actualRequest.products.map((arrRequest, index) => React.createElement(\"div\", {\n        key: index,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28\n        },\n        __self: this\n      }, \"Mesa \", actualRequest.table), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29\n        },\n        __self: this\n      }, \" \", arrRequest.quantity, \" \"), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30\n        },\n        __self: this\n      }, \" \", arrRequest.name, \" \"), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      }, \" \", arrRequest.options || '', \" \"), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      }, \" \", arrRequest.extras ? arrRequest.extras.name : '', \" \"), React.createElement(Button, {\n        onClick: () => this.updateRequest(),\n        disabled: actualRequest.status === 'doing',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      }, this.buttonName(actualRequest.status)))));\n    };\n\n    this.updateRequest = async (id, status) => {\n      await fire.firestore().collection('requests').doc(id).update({\n        status\n      });\n      this.getRequestFirebase();\n    };\n\n    this.buttonName = status => {\n      if (status === 'toDo') {\n        return 'Preparar';\n      } else if (status === 'doing') {\n        return 'Em preparo...';\n      } else if (status === 'done') {\n        return 'Pronto !';\n      }\n    };\n  }\n\n  componentWillMount() {\n    this.getRequestFirebase();\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, this.createRestaurantManager());\n  }\n\n}\n\nexport default CookerComponent;","map":{"version":3,"sources":["/home/giovannasouto/Desktop/lab/burguer-queen/src/components/cooker/cooker.js"],"names":["React","Component","fire","Button","CookerComponent","constructor","props","state","requestList","getRequestFirebase","firestore","collection","get","then","request","forEach","doc","push","data","id","uid","setState","catch","err","createRestaurantManager","map","actualRequest","products","arrRequest","index","table","quantity","name","options","extras","updateRequest","status","buttonName","update","componentWillMount","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport fire from 'firebase';\nimport Button from '@material-ui/core/Button';\n\n\n\nclass CookerComponent extends Component{\n    constructor(props){\n        super(props)\n        this.state={\n            requestList: []            \n        }\n    this.getRequestFirebase = () => {\n        return fire.firestore().collection('requests')\n        .get()\n        .then((request) => {\n            const requestList = []\n            request.forEach(doc => requestList.push({...doc.data(), id: doc.uid}) )\n            this.setState({requestList})\n        })\n        .catch(err => err)\n        }\n\n        this.createRestaurantManager = () => {\n             return this.state.requestList.map((actualRequest,) => (\n                 actualRequest.products.map((arrRequest, index) => (\n                     <div key={index}>\n                     <p>Mesa {actualRequest.table}</p>\n                     <p> {arrRequest.quantity} </p>\n                     <p> {arrRequest.name} </p>\n                     <p> {arrRequest.options || ''} </p>\n                     <p> {arrRequest.extras ? arrRequest.extras.name : ''} </p>\n                 <Button onClick={() => this.updateRequest()} disabled={actualRequest.status === 'doing'}>{this.buttonName(actualRequest.status)}</Button>\n                     </div>\n                 ))\n             ))\n        }\n\n        this.updateRequest = async (id , status) => {            \n            await fire.firestore().collection('requests').doc(id).update({status});\n            this.getRequestFirebase()\n        }\n\n        this.buttonName = (status) => {\n            if(status === 'toDo') {\n                return 'Preparar'\n            }\n            else if(status === 'doing'){\n                return 'Em preparo...'\n            }\n            else if(status === 'done') {\n                return 'Pronto !'\n            }\n        }\n    }\n\n    componentWillMount(){\n        this.getRequestFirebase()\n    }\n\n\n\n    render(){\n        return(\n            <div>\n                {this.createRestaurantManager()}\n\n            </div>\n        )\n    }\n}\n\n\nexport default CookerComponent\n"]},"metadata":{},"sourceType":"module"}