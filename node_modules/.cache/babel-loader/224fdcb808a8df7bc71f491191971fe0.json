{"ast":null,"code":"import _objectSpread from \"/home/giovannasouto/Desktop/lab/burguer-queen/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nvar _jsxFileName = \"/home/giovannasouto/Desktop/lab/burguer-queen/src/components/cooker/cooker.js\";\nimport React, { Component } from 'react';\nimport fire from 'firebase';\nimport Button from '@material-ui/core/Button';\nimport moment from 'moment';\n\nclass CookerComponent extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      requestList: [],\n      timer: ''\n    };\n\n    this.getRequestFirebase = () => {\n      return fire.firestore().collection('requests').get().then(request => {\n        const requestList = [];\n        request.forEach(doc => requestList.push(_objectSpread({}, doc.data(), {\n          id: doc.id\n        })));\n        this.setState({\n          requestList: requestList.filter(request => request.status !== 'done')\n        });\n        console.log(requestList);\n      }).catch(err => err);\n    };\n\n    this.getUserId = () => fire.auth().currentUser.uid;\n\n    this.updateRequest = async (id, status) => {\n      await fire.firestore().collection('requests').doc(id).update({\n        status,\n        cookerId: this.getUserId()\n      });\n      this.getRequestFirebase();\n    };\n\n    this.buttonName = request => {\n      const userId = this.getUserId();\n\n      if (request.status === 'toDo') {\n        return React.createElement(Button, {\n          onClick: () => this.updateRequest(request.id, 'doing'),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 43\n          },\n          __self: this\n        }, \" Preparar\");\n      }\n\n      if (request.status === 'doing' && request.cookerId !== userId) {\n        return React.createElement(Button, {\n          disabled: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 46\n          },\n          __self: this\n        }, \" Em preparo...\");\n      }\n\n      if (request.status === 'doing' && request.cookerId === userId) {\n        return React.createElement(Button, {\n          onClick: () => this.updateRequest(request.id, 'done'),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 49\n          },\n          __self: this\n        }, \" Pronto pra entrega!\");\n      }\n    };\n\n    this.createRestaurantManager = () => {\n      return this.state.requestList.map((actualRequest, actualIndex) => //(actualRequest.createdAt)\n      React.createElement(\"div\", {\n        key: actualIndex,\n        style: {\n          border: '1px solid red'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, actualRequest.products.map((arrRequest, index) => React.createElement(\"div\", {\n        key: index,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, this.state.timer), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, \"Mesa \", actualRequest.table), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, \" \", arrRequest.quantity, \" \"), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, \" \", arrRequest.name, \" \"), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, \" \", arrRequest.options || '', \" \"), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, \" \", arrRequest.extras ? arrRequest.extras.name : '', \" \"))), this.buttonName(actualRequest)));\n    };\n\n    this.getTime = time => {\n      const startTime = moment(time, 'DD/MM/YYYY HH:mm');\n      const now = moment().add(2, 'hours');\n      setInterval(() => {\n        this.setState({\n          timer: moment(moment(now).diff(startTime, 'HH:mm')).format('HH:mm')\n        });\n        console.log('chamou');\n      }, 2000);\n    };\n  }\n\n  componentWillMount() {\n    this.getRequestFirebase();\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, this.createRestaurantManager());\n  }\n\n}\n\nexport default CookerComponent;","map":{"version":3,"sources":["/home/giovannasouto/Desktop/lab/burguer-queen/src/components/cooker/cooker.js"],"names":["React","Component","fire","Button","moment","CookerComponent","constructor","props","state","requestList","timer","getRequestFirebase","firestore","collection","get","then","request","forEach","doc","push","data","id","setState","filter","status","console","log","catch","err","getUserId","auth","currentUser","uid","updateRequest","update","cookerId","buttonName","userId","createRestaurantManager","map","actualRequest","actualIndex","border","products","arrRequest","index","table","quantity","name","options","extras","getTime","time","startTime","now","add","setInterval","diff","format","componentWillMount","render"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,IAAP,MAAiB,UAAjB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,MAAP,MAAmB,QAAnB;;AAIA,MAAMC,eAAN,SAA8BJ,SAA9B,CAAuC;AACnCK,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAW;AACPC,MAAAA,WAAW,EAAE,EADN;AAEPC,MAAAA,KAAK,EAAE;AAFA,KAAX;;AAKA,SAAKC,kBAAL,GAA0B,MAAM;AAC5B,aAAOT,IAAI,CAACU,SAAL,GAAiBC,UAAjB,CAA4B,UAA5B,EACNC,GADM,GAENC,IAFM,CAEAC,OAAD,IAAa;AACf,cAAMP,WAAW,GAAG,EAApB;AACAO,QAAAA,OAAO,CAACC,OAAR,CAAgBC,GAAG,IAAIT,WAAW,CAACU,IAAZ,mBAAqBD,GAAG,CAACE,IAAJ,EAArB;AAAiCC,UAAAA,EAAE,EAAEH,GAAG,CAACG;AAAzC,WAAvB;AACA,aAAKC,QAAL,CAAc;AAACb,UAAAA,WAAW,EAAEA,WAAW,CAACc,MAAZ,CAAmBP,OAAO,IAAIA,OAAO,CAACQ,MAAR,KAAmB,MAAjD;AAAd,SAAd;AACAC,QAAAA,OAAO,CAACC,GAAR,CAAYjB,WAAZ;AACH,OAPM,EAQNkB,KARM,CAQAC,GAAG,IAAIA,GARP,CAAP;AASH,KAVD;;AAYA,SAAKC,SAAL,GAAiB,MACb3B,IAAI,CAAC4B,IAAL,GAAYC,WAAZ,CAAwBC,GAD5B;;AAIA,SAAKC,aAAL,GAAqB,OAAOZ,EAAP,EAAYG,MAAZ,KAAuB;AACxC,YAAMtB,IAAI,CAACU,SAAL,GAAiBC,UAAjB,CAA4B,UAA5B,EAAwCK,GAAxC,CAA4CG,EAA5C,EAAgDa,MAAhD,CAAuD;AACzDV,QAAAA,MADyD;AAEzDW,QAAAA,QAAQ,EAAE,KAAKN,SAAL;AAF+C,OAAvD,CAAN;AAII,WAAKlB,kBAAL;AACP,KAND;;AAQA,SAAKyB,UAAL,GAAmBpB,OAAD,IAAa;AAC3B,YAAMqB,MAAM,GAAG,KAAKR,SAAL,EAAf;;AACA,UAAGb,OAAO,CAACQ,MAAR,KAAmB,MAAtB,EAA8B;AAC1B,eAAO,oBAAC,MAAD;AAAQ,UAAA,OAAO,EAAG,MAAM,KAAKS,aAAL,CAAmBjB,OAAO,CAACK,EAA3B,EAA+B,OAA/B,CAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAAP;AACH;;AACD,UAAGL,OAAO,CAACQ,MAAR,KAAmB,OAAnB,IAA8BR,OAAO,CAACmB,QAAR,KAAqBE,MAAtD,EAA6D;AACzD,eAAO,oBAAC,MAAD;AAAQ,UAAA,QAAQ,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAAP;AACH;;AACD,UAAGrB,OAAO,CAACQ,MAAR,KAAmB,OAAnB,IAA8BR,OAAO,CAACmB,QAAR,KAAqBE,MAAtD,EAA8D;AAC1D,eAAO,oBAAC,MAAD;AAAQ,UAAA,OAAO,EAAE,MAAM,KAAKJ,aAAL,CAAmBjB,OAAO,CAACK,EAA3B,EAA+B,MAA/B,CAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kCAAP;AACH;AACJ,KAXD;;AAaA,SAAKiB,uBAAL,GAA+B,MAAM;AAChC,aAAO,KAAK9B,KAAL,CAAWC,WAAX,CAAuB8B,GAAvB,CAA2B,CAACC,aAAD,EAAgBC,WAAhB,KAC9B;AACA;AAAK,QAAA,GAAG,EAAEA,WAAV;AAAuB,QAAA,KAAK,EAAE;AAACC,UAAAA,MAAM,EAAE;AAAT,SAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACAF,aAAa,CAACG,QAAd,CAAuBJ,GAAvB,CAA2B,CAACK,UAAD,EAAaC,KAAb,KACvB;AAAK,QAAA,GAAG,EAAEA,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAI,KAAKrC,KAAL,CAAWE,KAAf,CADC,EAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAS8B,aAAa,CAACM,KAAvB,CAFA,EAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAKF,UAAU,CAACG,QAAhB,MAHA,EAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAKH,UAAU,CAACI,IAAhB,MAJA,EAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAKJ,UAAU,CAACK,OAAX,IAAsB,EAA3B,MALA,EAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAKL,UAAU,CAACM,MAAX,GAAoBN,UAAU,CAACM,MAAX,CAAkBF,IAAtC,GAA6C,EAAlD,MANA,CADJ,CADA,EAWK,KAAKZ,UAAL,CAAgBI,aAAhB,CAXL,CAFG,CAAP;AAgBJ,KAjBD;;AAmBA,SAAKW,OAAL,GAAcC,IAAD,IAAU;AACnB,YAAMC,SAAS,GAAGjD,MAAM,CAACgD,IAAD,EAAO,kBAAP,CAAxB;AACA,YAAME,GAAG,GAAGlD,MAAM,GAAGmD,GAAT,CAAa,CAAb,EAAgB,OAAhB,CAAZ;AACAC,MAAAA,WAAW,CAAC,MAAM;AACd,aAAKlC,QAAL,CAAc;AAAEZ,UAAAA,KAAK,EAAEN,MAAM,CAACA,MAAM,CAACkD,GAAD,CAAN,CAAYG,IAAZ,CAAiBJ,SAAjB,EAA4B,OAA5B,CAAD,CAAN,CAA6CK,MAA7C,CAAoD,OAApD;AAAT,SAAd;AACAjC,QAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ;AACH,OAHU,EAGR,IAHQ,CAAX;AAIH,KAPD;AAQH;;AAEDiC,EAAAA,kBAAkB,GAAE;AAChB,SAAKhD,kBAAL;AACH;;AAEDiD,EAAAA,MAAM,GAAE;AACJ,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,KAAKtB,uBAAL,EADL,CADJ;AAMH;;AArFkC;;AAyFvC,eAAejC,eAAf","sourcesContent":["import React, { Component } from 'react';\nimport fire from 'firebase';\nimport Button from '@material-ui/core/Button';\nimport moment from 'moment';\n\n\n\nclass CookerComponent extends Component{\n    constructor(props){\n        super(props)\n        this.state={\n            requestList: [],\n            timer: '',         \n        }\n\n        this.getRequestFirebase = () => {\n            return fire.firestore().collection('requests')\n            .get()\n            .then((request) => {\n                const requestList = []\n                request.forEach(doc => requestList.push({...doc.data(), id: doc.id}) )\n                this.setState({requestList: requestList.filter(request => request.status !== 'done')})\n                console.log(requestList)\n            })\n            .catch(err => err)\n        }\n\n        this.getUserId = () => (\n            fire.auth().currentUser.uid\n        )\n\n        this.updateRequest = async (id , status) => {          \n            await fire.firestore().collection('requests').doc(id).update({\n                status,\n                cookerId: this.getUserId()\n            })\n                this.getRequestFirebase()\n        }\n\n        this.buttonName = (request) => {\n            const userId = this.getUserId()\n            if(request.status === 'toDo') {\n                return <Button onClick= {() => this.updateRequest(request.id, 'doing' )}> Preparar</Button>\n            }\n            if(request.status === 'doing' && request.cookerId !== userId){\n                return <Button disabled> Em preparo...</Button>\n            }\n            if(request.status === 'doing' && request.cookerId === userId) {\n                return <Button onClick={() => this.updateRequest(request.id, 'done' )}> Pronto pra entrega!</Button>                \n            }\n        }\n\n        this.createRestaurantManager = () => {\n             return this.state.requestList.map((actualRequest, actualIndex) => (\n                 //(actualRequest.createdAt)\n                 <div key={actualIndex} style={{border: '1px solid red'}}>\n                {actualRequest.products.map((arrRequest, index) => (\n                     <div key={index}>\n                    <p>{this.state.timer}</p>\n                     <p>Mesa {actualRequest.table}</p>\n                     <p> {arrRequest.quantity} </p>\n                     <p> {arrRequest.name} </p>\n                     <p> {arrRequest.options || ''} </p>\n                     <p> {arrRequest.extras ? arrRequest.extras.name : ''} </p>\n                     </div>\n                ))}\n                     {this.buttonName(actualRequest)}                 \n                 </div>\n             ))\n        }\n\n        this.getTime=(time) => {\n            const startTime = moment(time, 'DD/MM/YYYY HH:mm')\n            const now = moment().add(2, 'hours')\n            setInterval(() => {\n                this.setState({ timer: moment(moment(now).diff(startTime, 'HH:mm')).format('HH:mm') })\n                console.log('chamou')\n            }, 2000)\n        }\n    }\n\n    componentWillMount(){\n        this.getRequestFirebase()\n    }\n\n    render(){\n        return(\n            <div>\n                {this.createRestaurantManager()}\n\n            </div>\n        )\n    }\n}\n\n\nexport default CookerComponent\n"]},"metadata":{},"sourceType":"module"}