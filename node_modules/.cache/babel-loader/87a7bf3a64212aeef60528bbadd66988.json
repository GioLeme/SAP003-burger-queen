{"ast":null,"code":"var _jsxFileName = \"/home/giovannasouto/Desktop/lab/burguer-queen/src/components/cooker/cooker.js\";\nimport React, { Component } from 'react';\nimport fire from 'firebase';\nimport Button from '@material-ui/core/Button';\n\nclass CookerComponent extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      requestList: [],\n      toDo: true\n    };\n\n    this.getRequestFirebase = () => {\n      return fire.firestore().collection('requests').get().then(request => {\n        const requestList = [];\n        request.forEach(doc => requestList.push(doc.data()));\n        this.setState({\n          requestList\n        });\n      }).catch(err => err);\n    };\n\n    this.createRestaurantManager = () => {\n      return this.state.requestList.map(actualRequest => actualRequest.products.map((arrRequest, index) => {\n        {\n          if (arrRequest.extras.length > 0) {\n            return 'true';\n          }\n        } //  <div key={index}>\n        //  <p>Mesa {actualRequest.table}</p>\n        // <p> {arrRequest.quantity} </p>\n        //  <p> {arrRequest.name} </p>\n        //  <p> {arrRequest.options || ''} </p>\n        //  <p> {arrRequest.extras && arrRequest.extras.length > 0 ? arrRequest.extras[0].name : ''} </p>\n        //  <Button onClick={this.prepare} disabled={actualRequest.disabled}>Preparar</Button>\n        //  </div>\n      }));\n    };\n\n    this.prepare = actualRequest => {\n      actualRequest.disabled = true;\n      console.log(actualRequest);\n      this.setState({\n        requestList: this.state.requestList\n      });\n      console.log(this.state.requestList);\n    };\n  }\n\n  componentWillMount() {\n    this.getRequestFirebase();\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, this.createRestaurantManager());\n  }\n\n}\n\nexport default CookerComponent;","map":{"version":3,"sources":["/home/giovannasouto/Desktop/lab/burguer-queen/src/components/cooker/cooker.js"],"names":["React","Component","fire","Button","CookerComponent","constructor","props","state","requestList","toDo","getRequestFirebase","firestore","collection","get","then","request","forEach","doc","push","data","setState","catch","err","createRestaurantManager","map","actualRequest","products","arrRequest","index","extras","length","prepare","disabled","console","log","componentWillMount","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,IAAP,MAAiB,UAAjB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;;AAIA,MAAMC,eAAN,SAA8BH,SAA9B,CAAuC;AACnCI,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAW;AACPC,MAAAA,WAAW,EAAE,EADN;AAEPC,MAAAA,IAAI,EAAE;AAFC,KAAX;;AAKJ,SAAKC,kBAAL,GAA0B,MAAM;AAC5B,aAAOR,IAAI,CAACS,SAAL,GAAiBC,UAAjB,CAA4B,UAA5B,EACNC,GADM,GAENC,IAFM,CAEAC,OAAD,IAAa;AACf,cAAMP,WAAW,GAAG,EAApB;AACAO,QAAAA,OAAO,CAACC,OAAR,CAAgBC,GAAG,IAAIT,WAAW,CAACU,IAAZ,CAAiBD,GAAG,CAACE,IAAJ,EAAjB,CAAvB;AACA,aAAKC,QAAL,CAAc;AAACZ,UAAAA;AAAD,SAAd;AACH,OANM,EAONa,KAPM,CAOAC,GAAG,IAAIA,GAPP,CAAP;AAQC,KATL;;AAWI,SAAKC,uBAAL,GAA+B,MAAM;AAChC,aAAO,KAAKhB,KAAL,CAAWC,WAAX,CAAuBgB,GAAvB,CAA4BC,aAAD,IAC9BA,aAAa,CAACC,QAAd,CAAuBF,GAAvB,CAA2B,CAACG,UAAD,EAAaC,KAAb,KAAuB;AAC/C;AAAE,cAAGD,UAAU,CAACE,MAAX,CAAkBC,MAAlB,GAA2B,CAA9B,EAAiC;AAC9B,mBAAO,MAAP;AACH;AAAC,SAH4C,CAI/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACC,OAZJ,CADG,CAAP;AAeJ,KAhBD;;AAkBA,SAAKC,OAAL,GAAgBN,aAAD,IAAmB;AAC9BA,MAAAA,aAAa,CAACO,QAAd,GAAyB,IAAzB;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYT,aAAZ;AACA,WAAKL,QAAL,CAAc;AAACZ,QAAAA,WAAW,EAAE,KAAKD,KAAL,CAAWC;AAAzB,OAAd;AAIJyB,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAK3B,KAAL,CAAWC,WAAvB;AAEC,KATD;AAUH;;AAED2B,EAAAA,kBAAkB,GAAE;AAChB,SAAKzB,kBAAL;AACH;;AAID0B,EAAAA,MAAM,GAAE;AACJ,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,KAAKb,uBAAL,EADL,CADJ;AAMH;;AA9DkC;;AAkEvC,eAAenB,eAAf","sourcesContent":["import React, { Component } from 'react';\nimport fire from 'firebase';\nimport Button from '@material-ui/core/Button';\n\n\n\nclass CookerComponent extends Component{\n    constructor(props){\n        super(props)\n        this.state={\n            requestList: [],\n            toDo: true,\n            \n        }\n    this.getRequestFirebase = () => {\n        return fire.firestore().collection('requests')\n        .get()\n        .then((request) => {\n            const requestList = []\n            request.forEach(doc => requestList.push(doc.data()))\n            this.setState({requestList})\n        })\n        .catch(err => err)\n        }\n\n        this.createRestaurantManager = () => {\n             return this.state.requestList.map((actualRequest,) => (\n                 actualRequest.products.map((arrRequest, index) => {\n                    { if(arrRequest.extras.length > 0) {\n                         return 'true'\n                     }}\n                    //  <div key={index}>\n                    //  <p>Mesa {actualRequest.table}</p>\n                    // <p> {arrRequest.quantity} </p>\n                    //  <p> {arrRequest.name} </p>\n                    //  <p> {arrRequest.options || ''} </p>\n                    //  <p> {arrRequest.extras && arrRequest.extras.length > 0 ? arrRequest.extras[0].name : ''} </p>\n                    //  <Button onClick={this.prepare} disabled={actualRequest.disabled}>Preparar</Button>\n                    //  </div>\n                    })\n             ))\n        }\n\n        this.prepare = (actualRequest) => {\n            actualRequest.disabled = true;\n            console.log(actualRequest)\n            this.setState({requestList: this.state.requestList});\n            \n            \n\n        console.log(this.state.requestList)\n            \n        }\n    }\n\n    componentWillMount(){\n        this.getRequestFirebase()\n    }\n\n\n\n    render(){\n        return(\n            <div>\n                {this.createRestaurantManager()}\n\n            </div>\n        )\n    }\n}\n\n\nexport default CookerComponent\n"]},"metadata":{},"sourceType":"module"}