{"ast":null,"code":"var _jsxFileName = \"/home/giovannasouto/Desktop/lab/burguer-queen/src/components/cooker/cooker.js\";\nimport React, { Component } from 'react';\nimport fire from 'firebase';\n\nclass CookerComponent extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      requestList: []\n    };\n\n    this.getRequestFirebase = () => {\n      return fire.firestore().collection('requests').get().then(request => {\n        const requestList = [];\n        request.forEach(doc => requestList.push(doc.data()));\n        this.setState({\n          requestList\n        });\n      }).catch(err => err);\n    };\n\n    this.createRestaurantManager = () => {\n      return this.state.requestList.map((actualRequest, index) => console.log(actualRequest.products.name) // <p key={index}>Mesa {actualRequest.table}</p> \n      // actualRequest.products.name,\n      // actualRequest.products.quantity  \n      );\n    };\n  }\n\n  componentWillMount() {\n    this.getRequestFirebase();\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, this.createRestaurantManager());\n  }\n\n}\n\nexport default CookerComponent;","map":{"version":3,"sources":["/home/giovannasouto/Desktop/lab/burguer-queen/src/components/cooker/cooker.js"],"names":["React","Component","fire","CookerComponent","constructor","props","state","requestList","getRequestFirebase","firestore","collection","get","then","request","forEach","doc","push","data","setState","catch","err","createRestaurantManager","map","actualRequest","index","console","log","products","name","componentWillMount","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,IAAP,MAAiB,UAAjB;;AAGA,MAAMC,eAAN,SAA8BF,SAA9B,CAAuC;AACnCG,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAW;AACPC,MAAAA,WAAW,EAAE;AADN,KAAX;;AAGJ,SAAKC,kBAAL,GAA0B,MAAM;AAC5B,aAAON,IAAI,CAACO,SAAL,GAAiBC,UAAjB,CAA4B,UAA5B,EACNC,GADM,GAENC,IAFM,CAEAC,OAAD,IAAa;AACf,cAAMN,WAAW,GAAG,EAApB;AACAM,QAAAA,OAAO,CAACC,OAAR,CAAgBC,GAAG,IAAIR,WAAW,CAACS,IAAZ,CAAiBD,GAAG,CAACE,IAAJ,EAAjB,CAAvB;AACA,aAAKC,QAAL,CAAc;AAACX,UAAAA;AAAD,SAAd;AACH,OANM,EAONY,KAPM,CAOAC,GAAG,IAAIA,GAPP,CAAP;AAQC,KATL;;AAWI,SAAKC,uBAAL,GAA+B,MAAM;AAChC,aAAO,KAAKf,KAAL,CAAWC,WAAX,CAAuBe,GAAvB,CAA2B,CAACC,aAAD,EAAgBC,KAAhB,KAC9BC,OAAO,CAACC,GAAR,CAAYH,aAAa,CAACI,QAAd,CAAuBC,IAAnC,CAD8B,CAE/B;AAIA;AACA;AAPI,OAAP;AASJ,KAVD;AAWH;;AAEDC,EAAAA,kBAAkB,GAAE;AAChB,SAAKrB,kBAAL;AACH;;AAIDsB,EAAAA,MAAM,GAAE;AACJ,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,KAAKT,uBAAL,EADL,CADJ;AAKH;;AA1CkC;;AA8CvC,eAAelB,eAAf","sourcesContent":["import React, { Component } from 'react';\nimport fire from 'firebase';\n\n\nclass CookerComponent extends Component{\n    constructor(props){\n        super(props)\n        this.state={\n            requestList: []\n        }\n    this.getRequestFirebase = () => {\n        return fire.firestore().collection('requests')\n        .get()\n        .then((request) => {\n            const requestList = []\n            request.forEach(doc => requestList.push(doc.data()))\n            this.setState({requestList})\n        }) \n        .catch(err => err)\n        }\n\n        this.createRestaurantManager = () => {\n             return this.state.requestList.map((actualRequest, index) => (\n                 console.log(actualRequest.products.name)   \n                // <p key={index}>Mesa {actualRequest.table}</p> \n               \n                \n                   \n                // actualRequest.products.name,\n                // actualRequest.products.quantity  \n             ))\n        }\n    }\n\n    componentWillMount(){\n        this.getRequestFirebase()\n    }\n\n   \n\n    render(){\n        return(\n            <div>\n                {this.createRestaurantManager()}\n            </div>\n        )\n    }\n}\n\n\nexport default CookerComponent\n"]},"metadata":{},"sourceType":"module"}